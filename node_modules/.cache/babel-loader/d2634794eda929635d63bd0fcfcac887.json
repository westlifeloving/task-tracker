{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTask\"]), [[_vShow, $props.showAddTask]]), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6EACIA,aACsBC,kBADtB,EACsB;IAArBC,SAAQ,EAAEC;EAAW,CADtB,EACkB,IADlB,EACkB;EAAA;EADlB,EACkB,aADlB,GACkB,UADDC,mBACC,IACpBJ,aAIEK,gBAJF,EAIE;IAHCC,gBAAe,EAAEH,uBAGlB;IAFCI,YAAW,EAAEJ,mBAEd;IADCK,KAAK,EAAEC;EACR,CAJF;;EAAA","names":["_createVNode","_component_AddTask","onAddTask","$options","$props","_component_Tasks","onToggleReminder","onDeleteTask","tasks","$data"],"sourceRoot":"","sources":["/Users/ksuser/Desktop/task-tracker/src/views/Home.vue"],"sourcesContent":["<template>\n    <AddTask v-show=\"showAddTask\"\n    @add-task=\"addTask\" />\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n<script>\nimport Tasks from \"../components/Tasks.vue\";\nimport AddTask from \"../components/AddTask.vue\";\n\nexport default {\n  name: \"Home\",\n  props: {\n    showAddTask: Boolean,\n  },\n  components: {\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n      tasks: [],\n    };\n  },\n  methods: {\n    async addTask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      });\n\n      const data = await res.json();\n\n      this.tasks = [...this.tasks, data];\n    },\n    async deleteTask(id) {\n      if (confirm(\"Are you sure?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\",\n        });\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert(\"Error deleting task\");\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id);\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      });\n\n      const data = await res.json();\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      );\n    },\n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}