{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  const _component_Footer = _resolveComponent(\"Footer\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    onToggleAddTask: $options.toggleAddTask,\n    title: \"Task Tracker\",\n    showAddTask: $data.showAddTask\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleAddTask\", \"showAddTask\"]), _createVNode(_component_router_view), _createVNode(_component_Footer)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;;;;;uBAAXC,oBAQM,KARN,cAQM,CAPJC,aAIEC,iBAJF,EAIE;IAHCC,eAAe,EAAEC,sBAGlB;IAFAC,KAAK,EAAC,cAEN;IADCC,WAAW,EAAEC;EACd,CAJF;;EAAA,qCAOI,EAFJN,aAA2BO,sBAA3B,CAEI,EADJP,aAAUQ,iBAAV,CACI,CARN","names":["class","_createElementBlock","_createVNode","_component_Header","onToggleAddTask","$options","title","showAddTask","$data","_component_router_view","_component_Footer"],"sourceRoot":"","sources":["/Users/ksuser/Desktop/task-tracker/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Header\n      @toggle-add-task=\"toggleAddTask\"\n      title=\"Task Tracker\"\n      :showAddTask=\"showAddTask\"\n    />\n    <router-view></router-view>\n    <Footer />\n  </div>\n</template>\n\n<script>\nimport Footer from \"./components/Footer.vue\";\nimport Header from \"./components/Header.vue\";\nimport Tasks from \"./components/Tasks.vue\";\nimport AddTask from \"./components/AddTask.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Footer,\n    Header,\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false,\n    };\n  },\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    async addTask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      });\n\n      const data = await res.json();\n\n      this.tasks = [...this.tasks, data];\n    },\n    async deleteTask(id) {\n      if (confirm(\"Are you sure?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\",\n        });\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert(\"Error deleting task\");\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res = await fetch(`api/tasks/${id}`,{\n        method:'PUT',\n        headers:{\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask)\n      })\n\n      const data = await res.json()\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      );\n    }, \n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap\");\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: \"Poppins\", sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}